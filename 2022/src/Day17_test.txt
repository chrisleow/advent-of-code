fun main() {

    fun part1(input: List<String>): Int {
        val finalState = generateStates(input.parse(), listOf("AA"), 30)
            .maxBy { it.pressureReleased }

        generateSequence(finalState) { it.previous }
            .toList()
            .reversed()
            .forEach {
                println("Remaining ${it.remaining}: Rooms ${it.rooms.joinToString(", ")}, Pressure: ${it.pressureReleased}.")
            }

        return finalState.pressureReleased
    }

    fun part2(input: List<String>): Int {
        val finalState = generateStates(input.parse(), listOf("AA", "AA"), 26)
            .maxBy { it.pressureReleased }

        generateSequence(finalState) { it.previous }
            .toList()
            .reversed()
            .forEach {
                println("Remaining ${it.remaining}: Rooms ${it.rooms.joinToString(", ")}, Pressure: ${it.pressureReleased}.")
            }

        return finalState.pressureReleased
    }

    val testInput = readInput("Day16_test")
    check(part1(testInput) == 1651)
    // check(part2(testInput) == 1707)

//    val input = readInput("Day16")
//    println("Part 1: ${part1(input)}")
//    println("Part 2: ${part2(input)}")
}
